{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "üöÄ Start Dev",
      "detail": "Start development: app servers (HMR) + library build watch",
      "type": "shell",
      "command": "pnpm",
      "args": ["dev"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": ["$tsc", "$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "dedicated",
        "clear": false,
        "close": false
      },
      "runOptions": {
        "runOn": "folderOpen"
      }
    },
    {
      "label": "üñ±Ô∏è dev:desktop",
      "detail": "Start Electron desktop app",
      "type": "shell",
      "command": "pnpm",
      "args": ["-w", "run", "dev:desktop"],
      "group": "build",
      "problemMatcher": ["$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "new",
        "clear": false,
        "close": false
      },
      "dependsOn": []
    },
    {
      "label": "üß™ Desktop Debug Page",
      "detail": "Start Electron with desktop debug/test page",
      "type": "shell",
      "command": "pnpm",
      "args": ["--filter", "@atomiton/desktop", "run", "dev:desktop"],
      "group": "build",
      "problemMatcher": ["$tsc"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "new",
        "clear": false,
        "close": false
      },
      "dependsOn": []
    },
    {
      "label": "üìú Tail Logs",
      "detail": "Tail Atomiton logs in real-time",
      "type": "shell",
      "command": "pnpm",
      "args": ["dev:logs"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "never",
        "focus": true,
        "panel": "new",
        "clear": true,
        "close": false
      },
      "isBackground": true
    },
    {
      "label": "üîå kill-ports",
      "detail": "Kill all processes on dev ports (cross-platform)",
      "type": "shell",
      "command": "pnpm",
      "args": ["kill:ports"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "revealProblems": "never",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": true
      }
    },
    {
      "label": "Test: All Unit Tests",
      "detail": "Run unit tests across all packages",
      "type": "shell",
      "command": "pnpm",
      "args": ["test"],
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "problemMatcher": {
        "owner": "vitest",
        "source": "vitest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: All Integration Tests",
      "detail": "Run integration tests across packages",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:integration"],
      "group": "test",
      "problemMatcher": {
        "owner": "vitest",
        "source": "vitest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: E2E Tests",
      "detail": "Run end-to-end tests in the e2e package",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:e2e"],
      "group": "test",
      "problemMatcher": {
        "owner": "playwright",
        "source": "playwright",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s+at\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: E2E Tests (UI Mode)",
      "detail": "Run E2E tests with Playwright UI for debugging",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:e2e:ui"],
      "group": "test",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "never",
        "focus": true,
        "panel": "new",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: E2E Tests (Debug Mode)",
      "detail": "Run E2E tests in debug mode with browser visible",
      "type": "shell",
      "command": "pnpm",
      "args": ["test:e2e:debug"],
      "group": "test",
      "problemMatcher": {
        "owner": "playwright",
        "source": "playwright",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s+at\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": true,
        "panel": "new",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: Watch Mode",
      "detail": "Run tests in watch mode for development",
      "type": "shell",
      "command": "turbo",
      "args": ["run", "test:watch"],
      "group": "test",
      "isBackground": true,
      "problemMatcher": {
        "owner": "vitest",
        "source": "vitest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": ".*watching.*",
          "endsPattern": ".*waiting for file changes.*"
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "dedicated",
        "clear": false,
        "close": false
      }
    },
    {
      "label": "Test: Current File",
      "detail": "Run tests for the currently open file",
      "type": "shell",
      "command": "pnpm",
      "args": [
        "test",
        "${relativeFile}"
      ],
      "group": "test",
      "problemMatcher": {
        "owner": "vitest",
        "source": "vitest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": true,
        "panel": "new",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: All Tests",
      "detail": "Run all test types sequentially (unit, integration, e2e)",
      "type": "shell",
      "command": "bash",
      "args": ["-c", "pnpm test && pnpm test:integration && pnpm test:e2e"],
      "group": "test",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Test: All Unit Tests",
        "Test: All Integration Tests",
        "Test: E2E Tests"
      ],
      "problemMatcher": [
        {
          "owner": "vitest",
          "source": "vitest",
          "fileLocation": ["relative", "${workspaceFolder}"],
          "severity": "error",
          "pattern": {
            "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
            "file": 1,
            "line": 2,
            "column": 3,
            "message": 0
          }
        },
        {
          "owner": "playwright",
          "source": "playwright",
          "fileLocation": ["relative", "${workspaceFolder}"],
          "severity": "error",
          "pattern": {
            "regexp": "^\\s+at\\s+([^:]+):(\\d+):(\\d+).*$",
            "file": 1,
            "line": 2,
            "column": 3,
            "message": 0
          }
        }
      ],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "Test: Run Specific Test",
      "detail": "Run a specific test file or pattern",
      "type": "shell",
      "command": "pnpm",
      "args": [
        "test",
        "${input:testPattern}"
      ],
      "group": "test",
      "problemMatcher": {
        "owner": "vitest",
        "source": "vitest",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "severity": "error",
        "pattern": {
          "regexp": "^\\s*‚ùØ\\s+([^:]+):(\\d+):(\\d+).*$",
          "file": 1,
          "line": 2,
          "column": 3,
          "message": 0
        }
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": true,
        "panel": "new",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "üèóÔ∏è build",
      "detail": "Build all packages for production",
      "type": "shell",
      "command": "pnpm",
      "args": ["build"],
      "group": "build",
      "problemMatcher": ["$tsc", "$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "üîç lint",
      "detail": "Run ESLint on all packages",
      "type": "shell",
      "command": "pnpm",
      "args": ["lint"],
      "group": "build",
      "problemMatcher": ["$eslint-stylish"],
      "presentation": {
        "echo": true,
        "reveal": "always",
        "revealProblems": "onProblem",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": false
      }
    },
    {
      "label": "üé® format",
      "detail": "Format all code with Prettier",
      "type": "shell",
      "command": "pnpm",
      "args": ["format"],
      "group": "build",
      "problemMatcher": [],
      "presentation": {
        "echo": true,
        "reveal": "silent",
        "revealProblems": "never",
        "focus": false,
        "panel": "shared",
        "clear": true,
        "close": true
      }
    }
  ],
  "inputs": [
    {
      "id": "testPattern",
      "description": "Test file pattern or specific test name",
      "default": "",
      "type": "promptString"
    }
  ]
}
