name: Test Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Fast feedback: Run critical tests first
  critical-tests:
    name: Critical Tests (Fast Fail)
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm exec turbo run build --cache-dir=.turbo

      - name: Run critical tests
        run: pnpm exec turbo run test --cache-dir=.turbo -- -- -t "critical:"

      - name: Upload critical test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: critical-test-results
          path: |
            **/test-results/
            **/.vitest-cache/

  # Full test suite (runs after critical tests pass)
  full-tests:
    name: Full Test Suite
    runs-on: ubuntu-latest
    needs: critical-tests
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm exec turbo run build --cache-dir=.turbo

      - name: Run all tests
        run: pnpm exec turbo run test --cache-dir=.turbo

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/test-results/
            **/.vitest-cache/

  # Performance tests (separate job, can run in parallel)
  performance-tests:
    name: Performance & Slow Tests
    runs-on: ubuntu-latest
    needs: critical-tests
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need full history for Turbo filtering

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Cache Turborepo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build dependencies
        run: pnpm exec turbo run build --cache-dir=.turbo

      - name: Run slow tests with JSON reporter
        run:
          pnpm exec turbo run test --cache-dir=.turbo -- -- -t "slow:"
          --reporter=default --reporter=json
          --outputFile=.test-metrics/slow-tests.json

      - name: Track performance vs baseline
        run:
          pnpm exec turbo run test --cache-dir=.turbo -- -- --reporter=json
          --outputFile=.test-metrics/current.json && tsx
          scripts/compare-test-performance.ts
        continue-on-error: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-json
          path: .test-metrics/*.json
