#!/bin/sh

# Husky pre-commit hook - Run formatting, linting, and unit tests

# Set env var to indicate running in git hooks (affects headless mode, dev tools, etc.)
export GIT_HOOKS=1

echo "🔍 Running pre-commit checks..."

# Validate package consistency first
echo "📦 Validating package consistency..."
pnpm exec tsx scripts/validate-packages.ts

if [ $? -ne 0 ]; then
  echo "❌ Package validation failed! Fix consistency issues before committing."
  echo "💡 See Package Creation Guide: docs/development/PACKAGE_CREATION_GUIDE.md"
  exit 1
fi

# Run lint-staged to format and lint only staged files
echo "📝 Checking code style..."
npx lint-staged

if [ $? -ne 0 ]; then
  echo "❌ Lint-staged checks failed! Fix issues before committing."
  exit 1
fi

echo "🧪 Running unit tests for changed packages..."

# Run unit tests only for packages that have changed since last commit
# This is much faster and still catches issues in modified code
pnpm turbo run test --filter=[HEAD^] --ui stream --output-logs=new-only --log-order=grouped

if [ $? -ne 0 ]; then
  echo "❌ Unit tests failed for changed packages!"
  echo "💡 Fix failing tests before committing"
  exit 1
fi

echo "✅ All pre-commit checks passed!"