#!/bin/sh

# Husky pre-push hook - Unit tests, integration tests, benchmarks, and E2E tests

# Set HUSKY env var to reduce verbosity and trigger headless mode
export HUSKY=1

echo "📤 Pre-push validation..."

# Get the remote we're pushing to (usually origin)
REMOTE="${1:-origin}"
URL="$2"

# Run ALL unit tests - comprehensive final validation before push
echo "🧪 Running ALL unit tests..."
echo "   📦 Testing all packages - final guard before push..."
# Run all unit tests without filtering - this is our final safety check
pnpm turbo run test --ui stream --output-logs=new-only --log-order=grouped || {
  echo "❌ Unit tests failed!"
  echo "💡 Fix unit tests before pushing"
  exit 1
}

# Run integration tests
echo "🔗 Running integration tests..."
pnpm test:integration || {
  echo "❌ Integration tests failed!"
  echo "💡 Fix integration tests before pushing"
  exit 1
}

# Check for benchmark regressions
echo "📊 Checking for performance regressions..."
pnpm test:benchmark || {
  echo "❌ Benchmark tests failed!"
  echo "💡 Performance contracts must pass before pushing"
  exit 1
}

# Run critical user journey tests using Playwright (apps only)
echo "🎭 Running user journey tests (critical paths)..."
# Run Playwright tests for apps that have them - these are blocking and mandatory
echo "   📱 Running client user journey tests..."
cd apps/client && pnpm playwright test --config playwright.config.ts || {
  echo "❌ Client user journey tests failed!"
  echo "💡 Critical user journeys must pass before pushing"
  echo "🚨 User journey test failures are BLOCKING - fix before push"
  exit 1
}
cd ../..

echo "   🖥️  Running desktop user journey tests..."
cd apps/desktop && pnpm playwright test --config playwright.config.ts || {
  echo "❌ Desktop user journey tests failed!"
  echo "💡 Critical user journeys must pass before pushing"
  echo "🚨 User journey test failures are BLOCKING - fix before push"
  exit 1
}
cd ../..

echo ""
echo "✅ Pre-push checks complete - ready to push!"