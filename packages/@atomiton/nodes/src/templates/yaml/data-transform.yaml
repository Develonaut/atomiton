id: "550e8400-e29b-41d4-a716-446655440002"
name: "Data Transform Pipeline"
description: "Read CSV data, transform it, and output processed results"
category: "data"
type: "group"
version: "1.0.0"

metadata:
  created: "2025-01-15T00:00:00Z"
  modified: "2025-01-15T00:00:00Z"
  author: "Atomiton Team"
  authorId: "atomiton-team"
  source: "system"
  type: "data-transform-pipeline"
  icon: "database"
  tags:
    - "data"
    - "transform"
    - "etl"
  keywords:
    - "csv"
    - "data"
    - "transform"
    - "filter"
    - "aggregate"
    - "etl"
    - "processing"
  runtime:
    language: "typescript"
  experimental: false
  deprecated: false
  documentationUrl: "https://docs.atomiton.com/nodes/data-transform"

nodes:
  - id: "csv-source"
    type: "csv-reader"
    name: "Read CSV Data"
    version: "1.0.0"
    parameters:
      filePath: "/data/sample.csv"
      hasHeaders: true
      delimiter: ","
      encoding: "utf-8"
    position:
      x: 50
      y: 100

  - id: "filter-transform"
    type: "transform"
    name: "Filter Active Records"
    version: "1.0.0"
    parameters:
      expression:
        "// Filter only active records\nreturn data.filter(row => row.active ===
        'true');"
      inputType: "array"
      outputType: "array"
    position:
      x: 300
      y: 100

  - id: "aggregate-code"
    type: "code"
    name: "Calculate Totals"
    version: "1.0.0"
    parameters:
      code: |
        // Aggregate totals
        const total = data.reduce((sum, row) => {
          return sum + parseFloat(row.amount || 0);
        }, 0);

        return {
          total: total,
          count: data.length,
          average: total / data.length
        };
      inputParams: "data"
      returnType: "object"
      async: false
    position:
      x: 550
      y: 100

  - id: "output-file"
    type: "file-system"
    name: "Write Results"
    version: "1.0.0"
    parameters:
      operation: "write"
      filePath: "/output/results.json"
      encoding: "utf-8"
      createDirectory: true
      overwrite: true
    position:
      x: 800
      y: 100

edges:
  - id: "csv-to-filter"
    source: "csv-source"
    target: "filter-transform"
    sourceHandle: "output"
    targetHandle: "input"
  - id: "filter-to-aggregate"
    source: "filter-transform"
    target: "aggregate-code"
    sourceHandle: "output"
    targetHandle: "input"
  - id: "aggregate-to-output"
    source: "aggregate-code"
    target: "output-file"
    sourceHandle: "output"
    targetHandle: "input"

variables:
  inputPath:
    type: "string"
    defaultValue: "/data/sample.csv"
    description: "Path to input CSV file"
  outputPath:
    type: "string"
    defaultValue: "/output/results.json"
    description: "Path to output JSON file"

settings:
  runtime:
    timeout: 30000
  ui:
    color: "#2196F3"
