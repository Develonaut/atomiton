/* Register custom property for smooth animation */
@property --progress-deg {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

:root {
  --atomiton-node-width: 80px;
  --atomiton-node-height: 80px;
  --atomiton-node-border-radius: 1.25rem;
  --atomiton-node-border-width: 1px;
  --atomiton-node-border-default: var(--color-s-01);
  --atomiton-node-border-hover: var(--color-s-02);
  --atomiton-node-border-selected: var(--color-shade-06);
  --atomiton-node-background: var(--color-surface-01);
  --atomiton-node-shadow-hover: var(--box-shadow-prompt-input);
  --atomiton-node-shadow-selected: var(--box-shadow-prompt-input);
  --atomiton-node-inner-ring-color: var(--shade-02);
  --atomiton-node-inner-ring-size: 4px;
  --atomiton-handle-size: 12px;
  --atomiton-handle-border-width: 2px;
  --atomiton-handle-border-color: var(--shade-01);
  --atomiton-handle-bg-default: var(--atomiton-node-border-default);
  --atomiton-handle-bg-hover: var(--atomiton-node-border-hover);
  --atomiton-handle-bg-selected: var(--atomiton-node-border-selected);
  --atomiton-transition-duration: 0.2s;
  --atomiton-transition-easing: ease;

  /* Execution state colors - using theme colors from @atomiton/ui */
  --atomiton-node-state-pending: var(--color-tertiary);
  --atomiton-node-state-executing: var(--color-blue);
  --atomiton-node-state-completed: var(--color-green);
  --atomiton-node-state-error: var(--color-red);
  --atomiton-node-state-skipped: var(--color-yellow);
}

.react-flow__node,
.react-flow__node-input,
.react-flow__node-default,
.react-flow__node-output,
.react-flow__node-group {
  box-sizing: border-box;
  width: var(--atomiton-node-width);
  height: var(--atomiton-node-height);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: var(--atomiton-node-border-radius);
  border: var(--atomiton-node-border-width) solid
    var(--atomiton-node-border-default);
  background-color: var(--atomiton-node-background);
  cursor: pointer;
  transition: border-color var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

.react-flow__node .atomiton-node,
.react-flow__node-input .atomiton-node,
.react-flow__node-default .atomiton-node,
.react-flow__node-output .atomiton-node,
.react-flow__node-group .atomiton-node {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: var(--atomiton-node-border-radius);
  transition: box-shadow var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

.react-flow__node.selectable:hover,
.react-flow__node-input.selectable:hover,
.react-flow__node-default.selectable:hover,
.react-flow__node-output.selectable:hover,
.react-flow__node-group.selectable:hover {
  border-color: var(--atomiton-node-border-hover);
  box-shadow: none;
}

.react-flow__node.selectable:hover .atomiton-node,
.react-flow__node-input.selectable:hover .atomiton-node,
.react-flow__node-default.selectable:hover .atomiton-node,
.react-flow__node-output.selectable:hover .atomiton-node,
.react-flow__node-group.selectable:hover .atomiton-node {
  box-shadow: 0 0 0 var(--atomiton-node-inner-ring-size)
    var(--atomiton-node-inner-ring-color) inset;
}

.react-flow__node.selectable.selected,
.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible,
.react-flow__node-input.selectable.selected,
.react-flow__node-input.selectable:focus,
.react-flow__node-input.selectable:focus-visible,
.react-flow__node-default.selectable.selected,
.react-flow__node-default.selectable:focus,
.react-flow__node-default.selectable:focus-visible,
.react-flow__node-output.selectable.selected,
.react-flow__node-output.selectable:focus,
.react-flow__node-output.selectable:focus-visible,
.react-flow__node-group.selectable.selected,
.react-flow__node-group.selectable:focus,
.react-flow__node-group.selectable:focus-visible {
  border-color: var(--atomiton-node-border-selected);
  box-shadow: var(--atomiton-node-shadow-selected);
}

.react-flow__node.selectable.selected .atomiton-node,
.react-flow__node.selectable:focus .atomiton-node,
.react-flow__node.selectable:focus-visible .atomiton-node,
.react-flow__node-input.selectable.selected .atomiton-node,
.react-flow__node-input.selectable:focus .atomiton-node,
.react-flow__node-input.selectable:focus-visible .atomiton-node,
.react-flow__node-default.selectable.selected .atomiton-node,
.react-flow__node-default.selectable:focus .atomiton-node,
.react-flow__node-default.selectable:focus-visible .atomiton-node,
.react-flow__node-output.selectable.selected .atomiton-node,
.react-flow__node-output.selectable:focus .atomiton-node,
.react-flow__node-output.selectable:focus-visible .atomiton-node,
.react-flow__node-group.selectable.selected .atomiton-node,
.react-flow__node-group.selectable:focus .atomiton-node,
.react-flow__node-group.selectable:focus-visible .atomiton-node {
  box-shadow: 0 0 0 var(--atomiton-node-inner-ring-size)
    var(--atomiton-node-inner-ring-color) inset;
}

.react-flow__handle {
  width: var(--atomiton-handle-size);
  height: var(--atomiton-handle-size);
  border: var(--atomiton-handle-border-width) solid
    var(--atomiton-handle-border-color);
  background-color: var(--atomiton-handle-bg-default);
  border-radius: 50%;
  transition: background-color var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

.react-flow__node.selectable:hover .react-flow__handle,
.react-flow__node-input.selectable:hover .react-flow__handle,
.react-flow__node-default.selectable:hover .react-flow__handle,
.react-flow__node-output.selectable:hover .react-flow__handle,
.react-flow__node-group.selectable:hover .react-flow__handle {
  background-color: var(--atomiton-handle-bg-hover);
}

.react-flow__node.selectable.selected .react-flow__handle,
.react-flow__node.selectable:focus .react-flow__handle,
.react-flow__node.selectable:focus-visible .react-flow__handle,
.react-flow__node-input.selectable.selected .react-flow__handle,
.react-flow__node-input.selectable:focus .react-flow__handle,
.react-flow__node-input.selectable:focus-visible .react-flow__handle,
.react-flow__node-default.selectable.selected .react-flow__handle,
.react-flow__node-default.selectable:focus .react-flow__handle,
.react-flow__node-default.selectable:focus-visible .react-flow__handle,
.react-flow__node-output.selectable.selected .react-flow__handle,
.react-flow__node-output.selectable:focus .react-flow__handle,
.react-flow__node-output.selectable:focus-visible .react-flow__handle,
.react-flow__node-group.selectable.selected .react-flow__handle,
.react-flow__node-group.selectable:focus .react-flow__handle,
.react-flow__node-group.selectable:focus-visible .react-flow__handle {
  background-color: var(--atomiton-handle-bg-selected);
}

/* Pending state - use pseudo-element for consistency with other states */
.react-flow__node[data-execution-state="pending"],
.react-flow__node-input[data-execution-state="pending"],
.react-flow__node-default[data-execution-state="pending"],
.react-flow__node-output[data-execution-state="pending"],
.react-flow__node-group[data-execution-state="pending"] {
  border-color: transparent;
}

.react-flow__node[data-execution-state="pending"] .atomiton-node::before,
.react-flow__node-input[data-execution-state="pending"] .atomiton-node::before,
.react-flow__node-default[data-execution-state="pending"] .atomiton-node::before,
.react-flow__node-output[data-execution-state="pending"] .atomiton-node::before,
.react-flow__node-group[data-execution-state="pending"] .atomiton-node::before {
  content: "";
  position: absolute;
  inset: -2px; /* -2px for 1px border effect (1px transparent + 1px visual) */
  border-radius: inherit;
  padding: 1px;
  background: var(--atomiton-node-state-pending);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
}

.react-flow__node[data-execution-state="pending"] .react-flow__handle,
.react-flow__node-input[data-execution-state="pending"] .react-flow__handle,
.react-flow__node-default[data-execution-state="pending"] .react-flow__handle,
.react-flow__node-output[data-execution-state="pending"] .react-flow__handle,
.react-flow__node-group[data-execution-state="pending"] .react-flow__handle {
  background-color: var(--atomiton-node-state-pending);
}

/* Executing state - keep border at 1px, hide it, and use pseudo-element for 3px visual */
.react-flow__node[data-execution-state="executing"],
.react-flow__node-input[data-execution-state="executing"],
.react-flow__node-default[data-execution-state="executing"],
.react-flow__node-output[data-execution-state="executing"],
.react-flow__node-group[data-execution-state="executing"] {
  border-color: transparent;
}

/* Create the progress border using a pseudo-element on the inner node */
.react-flow__node[data-execution-state="executing"] .atomiton-node::before,
.react-flow__node-input[data-execution-state="executing"] .atomiton-node::before,
.react-flow__node-default[data-execution-state="executing"] .atomiton-node::before,
.react-flow__node-output[data-execution-state="executing"] .atomiton-node::before,
.react-flow__node-group[data-execution-state="executing"] .atomiton-node::before {
  --progress-deg: calc(var(--progress, 0) * 3.6deg);

  content: "";
  position: absolute;
  inset: -4px; /* -4px to account for 1px border + 3px visual border */
  border-radius: inherit;
  padding: 3px;
  background: conic-gradient(
    from -90deg,
    var(--atomiton-node-state-completed) var(--progress-deg),
    var(--atomiton-node-border-default) var(--progress-deg) 360deg
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
  transition: --progress-deg 0.3s ease-out;
}

.react-flow__node[data-execution-state="executing"] .react-flow__handle,
.react-flow__node-input[data-execution-state="executing"] .react-flow__handle,
.react-flow__node-default[data-execution-state="executing"] .react-flow__handle,
.react-flow__node-output[data-execution-state="executing"] .react-flow__handle,
.react-flow__node-group[data-execution-state="executing"] .react-flow__handle {
  background-color: var(--atomiton-node-state-completed);
}

/* Completed state - keep border at 1px and use pseudo-element for full 3px green border */
.react-flow__node[data-execution-state="completed"],
.react-flow__node-input[data-execution-state="completed"],
.react-flow__node-default[data-execution-state="completed"],
.react-flow__node-output[data-execution-state="completed"],
.react-flow__node-group[data-execution-state="completed"] {
  border-color: transparent;
}

.react-flow__node[data-execution-state="completed"] .atomiton-node::before,
.react-flow__node-input[data-execution-state="completed"] .atomiton-node::before,
.react-flow__node-default[data-execution-state="completed"] .atomiton-node::before,
.react-flow__node-output[data-execution-state="completed"] .atomiton-node::before,
.react-flow__node-group[data-execution-state="completed"] .atomiton-node::before {
  content: "";
  position: absolute;
  inset: -4px; /* -4px to account for 1px border + 3px visual border */
  border-radius: inherit;
  padding: 3px;
  background: var(--atomiton-node-state-completed);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
}

.react-flow__node[data-execution-state="completed"] .react-flow__handle,
.react-flow__node-input[data-execution-state="completed"] .react-flow__handle,
.react-flow__node-default[data-execution-state="completed"] .react-flow__handle,
.react-flow__node-output[data-execution-state="completed"] .react-flow__handle,
.react-flow__node-group[data-execution-state="completed"] .react-flow__handle {
  background-color: var(--atomiton-node-state-completed);
}

/* Error state - keep border at 1px and use pseudo-element for 3px red border */
.react-flow__node[data-execution-state="error"],
.react-flow__node-input[data-execution-state="error"],
.react-flow__node-default[data-execution-state="error"],
.react-flow__node-output[data-execution-state="error"],
.react-flow__node-group[data-execution-state="error"] {
  border-color: transparent;
}

/* Create the error progress border using a pseudo-element on the inner node */
.react-flow__node[data-execution-state="error"] .atomiton-node::before,
.react-flow__node-input[data-execution-state="error"] .atomiton-node::before,
.react-flow__node-default[data-execution-state="error"] .atomiton-node::before,
.react-flow__node-output[data-execution-state="error"] .atomiton-node::before,
.react-flow__node-group[data-execution-state="error"] .atomiton-node::before {
  --progress-deg: calc(var(--progress, 0) * 3.6deg);

  content: "";
  position: absolute;
  inset: -4px; /* -4px to account for 1px border + 3px visual border */
  border-radius: inherit;
  padding: 3px;
  background: conic-gradient(
    from -90deg,
    var(--atomiton-node-state-error) var(--progress-deg),
    var(--atomiton-node-border-default) var(--progress-deg) 360deg
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask-composite: exclude;
  pointer-events: none;
  transition: --progress-deg 0.3s ease-out;
}

.react-flow__node[data-execution-state="error"] .react-flow__handle,
.react-flow__node-input[data-execution-state="error"] .react-flow__handle,
.react-flow__node-default[data-execution-state="error"] .react-flow__handle,
.react-flow__node-output[data-execution-state="error"] .react-flow__handle,
.react-flow__node-group[data-execution-state="error"] .react-flow__handle {
  background-color: var(--atomiton-node-state-error);
}

.react-flow__node[data-execution-state="skipped"],
.react-flow__node-input[data-execution-state="skipped"],
.react-flow__node-default[data-execution-state="skipped"],
.react-flow__node-output[data-execution-state="skipped"],
.react-flow__node-group[data-execution-state="skipped"] {
  border-color: var(--atomiton-node-state-skipped);
}

.react-flow__node[data-execution-state="skipped"] .react-flow__handle,
.react-flow__node-input[data-execution-state="skipped"] .react-flow__handle,
.react-flow__node-default[data-execution-state="skipped"] .react-flow__handle,
.react-flow__node-output[data-execution-state="skipped"] .react-flow__handle,
.react-flow__node-group[data-execution-state="skipped"] .react-flow__handle {
  background-color: var(--atomiton-node-state-skipped);
}

/* Smooth transitions for execution state changes */
.react-flow__node[data-execution-state],
.react-flow__node-input[data-execution-state],
.react-flow__node-default[data-execution-state],
.react-flow__node-output[data-execution-state],
.react-flow__node-group[data-execution-state] {
  transition: border-color 0.3s ease;
}
