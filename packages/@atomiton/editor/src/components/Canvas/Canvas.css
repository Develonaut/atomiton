/**
 * Global ReactFlow styles for the Atomiton Blueprint editor
 * These styles control the visual appearance of all nodes, handles, and canvas elements
 *
 * Architecture:
 * - Canvas level controls all visual styling (borders, hover, selection)
 * - Node components focus purely on content and functionality
 * - Themes can override these styles for different visual experiences
 * 
 * Note: UI theme variables must be loaded before this stylesheet in the main app
 */

/* ============================================
   CSS VARIABLES
   Define all customizable values for the node system
   ============================================ */

:root {
  /* Node Dimensions */
  --atomiton-node-width: 80px;
  --atomiton-node-height: 80px;
  --atomiton-node-border-radius: 1.25rem;
  --atomiton-node-border-width: 1px;

  /* Node Colors - States */
  --atomiton-node-border-default: var(--color-s-01);
  --atomiton-node-border-hover: var(--color-s-02);
  --atomiton-node-border-selected: var(--color-shade-06);
  --atomiton-node-background: var(--color-surface-01);

  /* Node Shadow Effects */
  --atomiton-node-shadow-hover: var(--box-shadow-prompt-input);
  --atomiton-node-shadow-selected: var(--box-shadow-prompt-input);
  --atomiton-node-inner-ring-color: var(--shade-02);
  --atomiton-node-inner-ring-size: 4px;

  /* Handle Dimensions */
  --atomiton-handle-size: 12px;
  --atomiton-handle-border-width: 2px;
  --atomiton-handle-border-color: var(--shade-01);

  /* Handle Colors - States (match node borders) */
  --atomiton-handle-bg-default: var(--atomiton-node-border-default);
  --atomiton-handle-bg-hover: var(--atomiton-node-border-hover);
  --atomiton-handle-bg-selected: var(--atomiton-node-border-selected);

  /* Transitions */
  --atomiton-transition-duration: 0.2s;
  --atomiton-transition-easing: ease;
}

/* ============================================
   BASE NODE STYLES
   All ReactFlow node types share these base styles
   ============================================ */

/* Base node container */
.react-flow__node,
.react-flow__node-input,
.react-flow__node-default,
.react-flow__node-output,
.react-flow__node-group {
  /* Dimensions */
  width: var(--atomiton-node-width);
  height: var(--atomiton-node-height);

  /* Layout */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  /* Visual */
  border-radius: var(--atomiton-node-border-radius);
  border: var(--atomiton-node-border-width) solid
    var(--atomiton-node-border-default);
  background-color: var(--atomiton-node-background);

  /* Interaction */
  cursor: pointer;
  transition: border-color var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

/* Border radius inheritance for node and inner content */
.react-flow__node,
.react-flow__node-input,
.react-flow__node-default,
.react-flow__node-output,
.react-flow__node-group,
.react-flow__node .atomiton-node,
.react-flow__node-input .atomiton-node,
.react-flow__node-default .atomiton-node,
.react-flow__node-output .atomiton-node,
.react-flow__node-group .atomiton-node {
  border-radius: var(--atomiton-node-border-radius);
}

/* ============================================
   ATOMITON NODE CONTENT
   Inner content wrapper for custom nodes
   ============================================ */

.react-flow__node .atomiton-node,
.react-flow__node-input .atomiton-node,
.react-flow__node-default .atomiton-node,
.react-flow__node-output .atomiton-node,
.react-flow__node-group .atomiton-node {
  /* Fill parent */
  width: 100%;
  height: 100%;

  /* Center content */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  /* Smooth transitions for interactive states */
  transition: box-shadow var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

/* ============================================
   HOVER STATE
   Visual feedback when hovering over nodes
   ============================================ */

.react-flow__node.selectable:hover,
.react-flow__node-input.selectable:hover,
.react-flow__node-default.selectable:hover,
.react-flow__node-output.selectable:hover,
.react-flow__node-group.selectable:hover {
  border-color: var(--atomiton-node-border-hover);
  box-shadow: none; /* Reset ReactFlow default */
}

/* Hover state - inner shadow effect */
.react-flow__node.selectable:hover .atomiton-node,
.react-flow__node-input.selectable:hover .atomiton-node,
.react-flow__node-default.selectable:hover .atomiton-node,
.react-flow__node-output.selectable:hover .atomiton-node,
.react-flow__node-group.selectable:hover .atomiton-node {
  box-shadow: 0 0 0 var(--atomiton-node-inner-ring-size)
    var(--atomiton-node-inner-ring-color) inset;
}

/* ============================================
   SELECTED & FOCUS STATES
   Visual feedback for selected/focused nodes
   ============================================ */

/* Selected/Focus state - outer border */
.react-flow__node.selectable.selected,
.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible,
.react-flow__node-input.selectable.selected,
.react-flow__node-input.selectable:focus,
.react-flow__node-input.selectable:focus-visible,
.react-flow__node-default.selectable.selected,
.react-flow__node-default.selectable:focus,
.react-flow__node-default.selectable:focus-visible,
.react-flow__node-output.selectable.selected,
.react-flow__node-output.selectable:focus,
.react-flow__node-output.selectable:focus-visible,
.react-flow__node-group.selectable.selected,
.react-flow__node-group.selectable:focus,
.react-flow__node-group.selectable:focus-visible {
  border-color: var(--atomiton-node-border-selected);
  box-shadow: var(--atomiton-node-shadow-selected);
}

/* Selected/Focus state - inner double border effect */
.react-flow__node.selectable.selected .atomiton-node,
.react-flow__node.selectable:focus .atomiton-node,
.react-flow__node.selectable:focus-visible .atomiton-node,
.react-flow__node-input.selectable.selected .atomiton-node,
.react-flow__node-input.selectable:focus .atomiton-node,
.react-flow__node-input.selectable:focus-visible .atomiton-node,
.react-flow__node-default.selectable.selected .atomiton-node,
.react-flow__node-default.selectable:focus .atomiton-node,
.react-flow__node-default.selectable:focus-visible .atomiton-node,
.react-flow__node-output.selectable.selected .atomiton-node,
.react-flow__node-output.selectable:focus .atomiton-node,
.react-flow__node-output.selectable:focus-visible .atomiton-node,
.react-flow__node-group.selectable.selected .atomiton-node,
.react-flow__node-group.selectable:focus .atomiton-node,
.react-flow__node-group.selectable:focus-visible .atomiton-node {
  box-shadow: 0 0 0 var(--atomiton-node-inner-ring-size)
    var(--atomiton-node-inner-ring-color) inset;
}

/* ============================================
   HANDLE STYLES
   Connection points for edges
   Handles match the node border color for each state
   ============================================ */

/* Base handle style - matches default node border */
.react-flow__handle {
  width: var(--atomiton-handle-size);
  height: var(--atomiton-handle-size);
  border: var(--atomiton-handle-border-width) solid
    var(--atomiton-handle-border-color);
  background-color: var(--atomiton-handle-bg-default);
  border-radius: 50%;
  transition: background-color var(--atomiton-transition-duration)
    var(--atomiton-transition-easing);
}

/* Handle hover state - matches node hover border */
.react-flow__node.selectable:hover .react-flow__handle,
.react-flow__node-input.selectable:hover .react-flow__handle,
.react-flow__node-default.selectable:hover .react-flow__handle,
.react-flow__node-output.selectable:hover .react-flow__handle,
.react-flow__node-group.selectable:hover .react-flow__handle {
  background-color: var(--atomiton-handle-bg-hover);
}

/* Handle selected/focus state - matches node selected border */
.react-flow__node.selectable.selected .react-flow__handle,
.react-flow__node.selectable:focus .react-flow__handle,
.react-flow__node.selectable:focus-visible .react-flow__handle,
.react-flow__node-input.selectable.selected .react-flow__handle,
.react-flow__node-input.selectable:focus .react-flow__handle,
.react-flow__node-input.selectable:focus-visible .react-flow__handle,
.react-flow__node-default.selectable.selected .react-flow__handle,
.react-flow__node-default.selectable:focus .react-flow__handle,
.react-flow__node-default.selectable:focus-visible .react-flow__handle,
.react-flow__node-output.selectable.selected .react-flow__handle,
.react-flow__node-output.selectable:focus .react-flow__handle,
.react-flow__node-output.selectable:focus-visible .react-flow__handle,
.react-flow__node-group.selectable.selected .react-flow__handle,
.react-flow__node-group.selectable:focus .react-flow__handle,
.react-flow__node-group.selectable:focus-visible .react-flow__handle {
  background-color: var(--atomiton-handle-bg-selected);
}
